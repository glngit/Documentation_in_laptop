kubernates cluster creation
--------------------------------

2 instances creation with masternode:2cpu, 4gb (t2 medium)
                          workernode:normal(free tier)
with security groups: ALLTCP, AnywhereIp4


1.Docker installation:(On all nodes):
--------------------------
sudo apt-get update

sudo apt-get install \
    ca-certificates \
    curl \
    gnupg \
    lsb-release -y

sudo mkdir -p /etc/apt/keyrings

curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg

 echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
  $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

sudo apt-get update

sudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin -y

sudo apt-mark hold docker-ce

sudo usermod -aG docker ubuntu

sudo docker version


2.kubeadm, kubelet, kubectl :(On all nodes):
------------------------------------------------
sudo apt-get update

sudo apt-get install -y apt-transport-https ca-certificates curl

sudo curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg

echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list

sudo apt-get update

sudo apt-get install -y kubelet=1.19.1-00 kubeadm=1.19.1-00 kubectl=1.19.1-00

sudo apt-mark hold kubelet kubeadm kubectl


Only in master Node:
--------------------------
sudo docker info | grep -i cgroup

echo "Environment="KUBELET_CGROUP_ARGS=--cgroup-driver=cgroupfs"" >> /etc/systemd/system/kubelet.service.d/10-kubeadm.conf

systemctl restart kubelet

systemctl daemon-reload

sudo kubeadm init

mkdir -p $HOME/.kube

sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config

sudo chown $(id -u):$(id -g) $HOME/.kube/config

sudo kubeadm token create --print-join-command


Only on worker nodes:
---------------------------
# output of (sudo kubeadm token create --print-join-command)

paste here

example:
  [kubeadm join 172.31.25.120:6443 --token qbefa2.2ffn87axmsyic1x7     --discovery-token-ca-cert-hash sha256:8a7a3eb62eb89017256bdaa387bf4a07ba513a29f88c714940a6c2ca8c5dc2ba]


Only in master Node:
--------------------------
kubectl get nodes  # worker node added, if not add security group [alltcp, anywhereip4] to master node

kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"

kubectl get nodes
   (Nodes are ready)

_____________________________________________________________________________________________________________________________________________









